var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = MshReader","category":"page"},{"location":"#MshReader","page":"Home","title":"MshReader","text":"","category":"section"},{"location":"#What-is-MshReader?","page":"Home","title":"What is MshReader?","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MshReader is a minimal package for reading GMSH mesh files. The input files are assumed to be given by the msh version 4.1 format, explained in this web. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"The goal of this package is to obtain nodal coordinates and element connectivities, as well as physical properties assigned to each element.","category":"page"},{"location":"#Who-is-writing-MshReader?","page":"Home","title":"Who is writing MshReader?","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"By the moment, only Jorge PÃ©rez Zerpa. Any contribution is welcome.","category":"page"},{"location":"#Functions-list","page":"Home","title":"Functions list","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [MshReader]","category":"page"},{"location":"#MshReader.MshFileReader-Tuple{Any}","page":"Home","title":"MshReader.MshFileReader","text":"Function for reading gmsh's mesh format files http://gmsh.info/doc/texinfo/gmsh.html#MSH-file-format\n\nInput:\n    - mshFilename: the name of the .msh file to be read\n\nOutput:\n    - nodesMat: matrix with 3 columns: [x y z]\n    - conecMat: vector with the connectivity of the elements: [ [n1 n2 n3], [n1 n2 n3 n4] ... ] \n    - physicalNames: vector with strings of physical names.\n    - elemPhysNums: vector with indexes \n\nAssumptions:\n    - physical names are saved as strings\n    - maximum of one physical tag per entity\n    - maximum number of nodes per element: 4 (linear tetrahedron)\n\n\n\n\n\n","category":"method"}]
}
